kind: Service
apiVersion: v1
metadata:
  name: trafficcontrolservice-direct
  labels:
    app: trafficcontrolservice
spec:
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 80
    targetPort: 6000
  selector:
    app: trafficcontrolservice

---
kind: Service
apiVersion: v1
metadata:
  name: trafficcontrolservice
  labels:
    app: trafficcontrolservice
spec:
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3500
  selector:
    app: trafficcontrolservice

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trafficcontrolservice
  labels:
    app: trafficcontrolservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trafficcontrolservice
  template:
    metadata:
      labels:
        app: trafficcontrolservice
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "trafficcontrolservice"
        dapr.io/app-port: "6000"
        dapr.io/sidecar-listen-addresses : "0.0.0.0"
        dapr.io/log-level: "debug"
        dapr.io/sidecar-cpu-request: "100m"
        dapr.io/sidecar-memory-request: "250Mi"
        dapr.io/sidecar-cpu-limit: "300m"
        dapr.io/sidecar-memory-limit: "1000Mi"
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: trafficcontrolservice
        image: rutzscolabcr.azurecr.io/dapr-traffic-control/trafficcontrolservice:latest
        ports:
        - containerPort: 6000
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 1000m
            memory: 200Mi
        livenessProbe:
          httpGet:
            path: v1.0/healthz
            port: 3500
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds : 5
          failureThreshold : 3
        readinessProbe:
          httpGet:
            path: v1.0/healthz
            port: 3500
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds : 5
          failureThreshold: 3